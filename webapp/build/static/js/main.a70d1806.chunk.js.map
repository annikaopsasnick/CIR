{"version":3,"sources":["components/Form.js","components/ListItem.js","components/CocktailList.js","components/Cocktail.js","components/ResultsContainer.js","components/SearchReccomender.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputs","setInputs","handleSubmit","handleChange","e","key","target","name","value","console","log","onSubmit","class","type","placeholder","onChange","spellcheck","id","selected","for","ListItem","props","ingredient_items","ingredients","replace","split","map","ingredient","i","onClick","ViewCocktail","className","src","image_source","alt","rating","CocktailList","cocktails","isList","c","index","image","Cocktail","Number","setIsList","icon","faTimesCircle","size","transform","color","starRatedColor","numberOfStars","starDimension","starSpacing","num_reviews","description","href","url","ResultsContainer","CurrentComponent","useState","cocktail","setCocktail","variant","setVariant","cocktail_name","updated_cocktail","find","SearchReccomender","suggestions","suggestion_list","Array","Object","entries","query","suggested_word","msg","push","suggestion_contents","length","App","results","updateResults","initialPage","updateInitialPage","search_suggestions","updateSuggestions","result_contents","event","preventDefault","query_string","temp","base_spirit","season","alert","axios","post","then","response","cocktail_results","JSON","parse","data","suggested_words","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a70d1806.chunk.js","sourcesContent":["\n\nconst Form = ({ inputs, setInputs, handleSubmit }) => {\n\n  // change input object based on user actions\n  function handleChange(e) { //output \n    let key = e.target.name;\n    let value = e.target.value;\n    inputs[key] = value;\n    setInputs({ ...inputs });\n    console.log(inputs);\n  }\n\n  // change input object for checkbox selection/de-selection\n  function handleChecked(e) {\n    let isChecked = e.target.checked\n    let key = e.target.name\n    let value = isChecked\n    inputs[key] = value;\n    setInputs({ ...inputs });\n    console.log(inputs);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div class=\"input-pair\">\n        <label>\n          Search:\n            <input type=\"text\" name=\"query_string\" placeholder=\"Ex: fruity fun lemon\" onChange={handleChange} spellcheck=\"true\" />\n        </label>\n      </div>\n\n      <div class=\"filter-container\">\n        <label>Filters:</label>\n        <div class=\"input-pair\">\n          <label>\n            Base Spirit:\n            </label>\n          <select id=\"base_spirit\" name=\"base_spirit\" onChange={handleChange}>\n            <option value=\"nopref\" selected=\"selected\">No Preference</option>\n            <option value=\"vodka\">Vodka</option>\n            <option value=\"tequila\">Tequila</option>\n            <option value=\"gin\">Gin</option>\n            <option value=\"rum\">Rum</option>\n            <option value=\"whiskey\">Whiskey</option>\n            <option value=\"brandy\">Brandy</option>\n            <option value=\"liqueur\">Liqueur</option>\n            <option value=\"wine\">Wine</option>\n            <option value=\"lowalc\">Low Alcohol</option>\n          </select>\n        </div>\n\n        <div class=\"input-pair\">\n          <label for=\"temp\">Temperature: </label>\n          <select name=\"temp\" id=\"temp\" onChange={handleChange}>\n            <option value=\"iced\">Iced</option>\n            <option value=\"hot\">Hot</option>\n            <option value=\"nopref\" selected=\"selected\">No Preference</option>\n          </select>\n        </div>\n\n        <div class=\"input-pair\">\n          <label for=\"season\">Season: </label>\n          <select name=\"season\" id=\"season\" onChange={handleChange}>\n            <option value=\"winter\">Winter</option>\n            <option value=\"spring\">Spring</option>\n            <option value=\"summer\">Summer</option>\n            <option value=\"fall\">Fall</option>\n            <option value=\"nopref\" selected=\"selected\">No Preference</option>\n          </select>\n        </div>\n      </div>\n\n      <button type=\"submit\" value=\"Submit\">Submit</button>\n    </form>\n  );\n}\n\n\nexport default Form","import PropTypes from 'prop-types';\n\n\nconst ListItem = (props) => {\n  //pre-processing and data cleaning \n  var ingredient_list = props.ingredients.replace(/[\\[\\]']+/g, '').split(\",\")\n\n  //list item view of ingredients \n  const ingredient_items = ingredient_list.map((ingredient, i) => <li key = {i}>{ingredient}</li>);\n\n  return (\n    <li>\n      <button onClick={() => {\n        props.ViewCocktail(props.name) // open specific cocktail details\n      }}>\n        <div className = \"ListItem\">\n          <div className=\"Cocktail_title\">\n          <h2>{props.name}</h2>\n          </div>\n        \n            <div className=\"row\">\n              <div className=\"image-container\" id=\"cocktail-image\">\n                <img className = \"List_image\" src={props.image_source} alt=\"cocktail\" />\n              </div>\n\n              <div className=\"text-box\" id=\"ingredients\">\n              <h2>Ingredients</h2>\n                <ul className = \"ListItem_ingredients\">\n                  {ingredient_items}\n\n                </ul>\n              </div>\n\n            </div>\n    \n          <div className = \"rating\">\n            <h3>Social rating:  </h3>\n            <h3>{props.rating}</h3>\n          </div>\n\n        </div>\n      </button>\n    </li>\n\n  )\n\n}\n\n\nListItem.propTypes = {\n  ingredients: PropTypes.array.isRequired,\n  name: PropTypes.string.isRequired,\n  image_source: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  ViewCocktail: PropTypes.func,\n  isList: PropTypes.bool,\n}\n\nexport default ListItem","\nimport ListItem from './ListItem';\nimport PropTypes from 'prop-types';\n\nconst CocktailList = ({ cocktails, ViewCocktail, isList }) => {\n  return (\n    <div className=\"CocktailList\">\n      <ul className=\"list\">\n        {cocktails.map((c, index) =>\n          <ListItem key={index}\n            ingredients={c.ingredients}\n            name={c.name}\n            image_source={c.image}\n            rating={c.rating}\n            ViewCocktail={ViewCocktail}\n            isList={isList} />\n        )}\n      </ul>\n    </div>\n  )\n\n}\n\nCocktailList.propTypes = {\n  cocktails: PropTypes.array.isRequired\n}\n\n\nexport default CocktailList","\nimport PropTypes from 'prop-types';\n// @ts-ignore\nimport StarRatings from 'react-star-ratings';\nimport { faWindowClose, faTimesCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst Cocktail = (props) => {\n\n  // remove brackets and convert string to list \n  var ingredient_list = props.ingredients.replace(/[\\[\\]']+/g, '').split(\",\")\n  // construct list items from ingredients\n  const ingredients = ingredient_list.map((ingredient, i) => <li key={i}>{ingredient}</li>);\n\n  const rating = (props.rating == \"no_data\") ? 0 : Number(props.rating);\n\n\n  return (\n\n\n    <div className=\"Cocktail\">\n\n      <button onClick={() => props.setIsList(true)} //close back to list view\n        type=\"button\">\n        <span className=\"fa-layers fa-fw\">\n          <FontAwesomeIcon icon={faTimesCircle} size={'2x'}\n            transform=\"down-1 left-1\" />\n          <FontAwesomeIcon icon={faTimesCircle} size={'2x'} color=\"rgb(242, 253, 230)\" />\n        </span>\n\n\n      </button>\n\n      <div className=\"Cocktail-layout\">\n        <div className=\"column\">\n\n          <div className=\"col-item\">\n            <div className=\"row\">\n\n              <div className=\"Cocktail_title\">\n                <h1 className=\"Cocktail_name\">{props.name}</h1>\n                <span className=\"Cocktail_rating\">\n                  <StarRatings\n                    rating={rating}\n                    starRatedColor=\"rgb(228, 104, 61)\"\n                    numberOfStars={5}\n                    starDimension=\"14px\"\n                    starSpacing=\"2px\"\n                    name='rating'\n                  />\n                      Rating: {props.rating} · ‎{props.num_reviews} reviews\n                    </span>\n              </div>\n\n              <div className=\"image-container\">\n                <img className=\"Cocktail_image\" src={props.image_source} alt=\"cocktail\"></img>\n              </div>\n\n\n\n            </div>\n          </div>\n\n          <div className=\"col-item\">\n            <div className=\"row\">\n\n              <div className=\"text-box\" id=\"Ingredients\">\n                <h2 className=\"Cocktail_sub_title\">Ingredients</h2>\n                <ul className=\"Cocktail_ingredients\">\n                  {ingredients}\n                </ul>\n              </div>\n\n              <div className=\"text-box\" id=\"Description\">\n                <h2 className=\"Cocktail_sub_title\">Description</h2>\n                <p>{props.description}</p>\n                <a href={props.url} target=\"_blank\">go to recipe</a>\n              </div>\n\n\n            </div>\n\n\n          </div>\n\n        </div>\n\n\n      </div>\n    </div>\n  )\n\n}\n\n\nCocktail.propTypes = {\n  ingredients: PropTypes.array.isRequired,\n  description: PropTypes.array.isRequired,\n  name: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  image_source: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  setIsList: PropTypes.func.isRequired,\n}\n\nexport default Cocktail;","\nimport CocktailList from './CocktailList'\nimport Cocktail from './Cocktail'\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst ResultsContainer = ({ cocktails, isList }) => {\n\n\n  var default_cocktail_info = { 'ingredients': \"\", 'description': \"\", 'name': \"\", 'url': \"\", 'image_source': \"\", 'rating': 0, 'num_reviews': 0 }\n\n  // store cocktail info based on selection\n  const [cocktail, setCocktail] = useState(default_cocktail_info)\n\n  // toggle between list and cocktail view\n  const [variant, setVariant] = useState(isList)\n\n\n  const ViewCocktail = (cocktail_name) => {\n    setVariant(false) // exit list view \n    var updated_cocktail = cocktails.find(cocktail => cocktail.name == cocktail_name)\n    setCocktail(updated_cocktail);\n  }\n\n  var CurrentComponent; // one of CocktailList or Cocktail\n\n  if (variant) {\n    CurrentComponent = <CocktailList cocktails={cocktails} ViewCocktail={ViewCocktail} isList={variant} />;\n  } else {\n    CurrentComponent =\n      <Cocktail ingredients={cocktail.ingredients}\n        description={cocktail.description}\n        name={cocktail.name}\n        url={cocktail.url}\n        image_source={cocktail.image}\n        rating={cocktail.rating}\n        num_reviews={cocktail.num_reviews}\n        setIsList={setVariant} />\n  }\n\n  return (\n    <>\n      {CurrentComponent}\n    </>\n  )\n\n}\n\n// define property types of ResultsContainer (for debugging)\nResultsContainer.propTypes = {\n  cocktails: PropTypes.array.isRequired,\n  isList: PropTypes.bool.isRequired\n}\n\nexport default ResultsContainer","\n/**\n * Component for recomendations when the query is invalid\n * @param {*} suggestions object of the form {query_token: suggested_word,} \n * @returns a list of suggestions to improve the search string\n */\nconst SearchReccomender = ({ suggestions }) => {\n\n\n  var suggestion_list = new Array();\n\n  Object.entries(suggestions).map(([query, suggested_word]) => {\n    console.log('inside map', query, suggested_word);\n    const msg = `replace ${query} with ${suggested_word}`;\n    suggestion_list.push(<li key={query}>{msg}</li>)\n  });\n\n  console.log('suggestion_list', suggestion_list);\n\n\n\n  const suggestion_contents = (suggestion_list.length != 0) ?\n    <div className=\"Suggestions\">\n      <p>consider making these changes in your search :)</p>\n      <ul className=\"suggestion-list\">\n        {suggestion_list}\n      </ul>  </div>\n    : <div className=\"NoSuggestions\"></div>\n\n\n  return (\n    <div className=\"SearchReccomender\">\n      {suggestion_contents}\n    </div>\n  );\n}\n\nexport default SearchReccomender\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport Form from './components/Form.js';\nimport ResultsContainer from './components/ResultsContainer.js';\nimport SearchReccomender from './components/SearchReccomender.js';\n\n\nfunction App() {\n\n  const default_input = { 'temp': 'nopref', 'query_string': '', 'base_spirit': 'nopref', 'ingredients': [], 'season': 'nopref' }\n\n  const [inputs, setInputs] = useState(default_input)\n  const [results, updateResults] = useState([])\n  const [initialPage, updateInitialPage] = useState(true)\n  const [search_suggestions, updateSuggestions] = useState({})\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (inputs.query_string === \"\" & inputs.temp === 'nopref' & inputs.base_spirit === 'nopref' & inputs.season === 'nopref') {\n      alert(\"Please enter a search term or filter.\");\n    }\n    axios.post('/query', inputs) // send inputs to backend\n      .then((response) => {\n        console.log(response); // recieve relevant list of cocktails \n        console.log(\"it works!\")\n        var cocktail_results = JSON.parse(response.data.cocktails)\n        var suggested_words = response.data.search_suggestions\n        updateInitialPage(false)\n        updateResults(cocktail_results, () => console.log(\"results\", results))\n        updateSuggestions(suggested_words)\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  let result_contents = (results.length != 0 & !initialPage) ?\n    < ResultsContainer cocktails={results} isList={true} /> :\n    (initialPage) ? <div className=\"first-render\"></div> :\n      <div className=\"no-results\">No cocktails found. Try a different search!\n        <SearchReccomender\n          suggestions={search_suggestions}\n        />\n      </div>\n\n\n  return (\n\n    <div className=\"App\">\n\n      <body>\n        <section className=\"container\">\n\n          <div className=\"left\">\n            <h1 id=\"title\">What is your cocktail order?</h1>\n            <h3 id=\"subtitle\">Annika Opsasnick (aro42) Callie Aboaf (cha46) Yunyun Wang (yw458) \n            Simran Puri (sp2262) Kaysie Yu (ky276)</h3>\n            <div className=\"form-container\">\n              < Form\n                inputs={inputs}\n                setInputs={setInputs}\n                handleSubmit={handleSubmit}\n              />\n\n            </div>\n\n          </div>\n          <div className=\"right\">\n            <div className=\"results-container\">\n              {result_contents}\n              {/* < ResultsContainer cocktails={results} isList={true} /> */}\n            </div>\n\n\n          </div>\n        </section>\n        <div className = \"bottom-left\">\n          <p>insert citation url</p>\n        </div>\n      </body>\n    </div>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}